#!/usr/bin/env node

/**
 * Module dependencies.
 */

var server = require('../lib/server')
  , client = require('../lib/client')
  , program = require('commander')
  , pkg = require('../package')
  , s = require('printf')
  , ms = require('ms');

// options

program
  .version(pkg.version)
  .option('-a, --addr <addr>', 'bind address [0.0.0.0]', '0.0.0.0')
  .option('-g, --get <cycle>', 'get data for <cycle>')
  .option('-s, --stats <cycle>', 'get stats for <cycle>')
  .option('--clear-all', 'clear all traces')
  .parse(process.argv);

// title

process.title = 'trace';

// --stats <cycle>

if (program.stats) {
  return client.stats(program.stats, function(err, stats){
    if (err) throw err;
    for (var name in stats.probes) {
      console.log();
      console.log(s('  \033[36m%13s\033[0m', name));
      for (var metric in stats.probes[name]) {
        var val = stats.probes[name][metric];
        console.log(s('    \033[90m%10s:\033[0m %s', metric, ms(val)));
      }
    }
    console.log();
    process.exit(0);
  });
}

// --get <cycle>

if (program.get) {
  return client.get(program.get, function(err, data){
    if (err) throw err;
    process.stdout.write(JSON.stringify(data, null, 2), function(){
      process.exit(0);
    });
  });
}

// --clear-all

if (program.clearAll) {
  return client.clearAll(function(err){
    if (err) throw err;
    process.exit(0);
  });
}

// bind

var addr = 'tcp://' + program.addr + ':5555';
server.sub.bind(addr);
console.log('sub bound to %s', addr);

var addr = 'tcp://' + program.addr + ':5556';
server.rep.bind(addr);
console.log('rep bound to %s', addr);
